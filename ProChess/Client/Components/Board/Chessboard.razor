@for (var row = VerticalAxis.Length - 1; row >= 0; row--)
{
    int localRow = row;
    <div class="row">
        @for (var column = 0; column < HorizontalAxis.Length; column++)
        {
            int localColumn = column;
            var piece = BlackPieces.FirstOrDefault(x => x.StartColumn == column && x.StartRow == row);
            if (piece == null)
            {
                piece = WhitePieces.FirstOrDefault(x => x.StartColumn == column && x.StartRow == row);
            }

            bool canMoveHere = cellsPossible.Contains((localRow, localColumn));

            <div @onclick="() => MovePiece(localRow, localColumn)"
                 class="cell @((piece == activePiece && piece != null) || canMoveHere ? "active" : "")">
                @if (piece != null)
                {
                    <img @onclick="() => { activePiece = piece; EvaluatePieceSpots(); }" src="@piece.Image" class="piece" />
                }
            </div>
        }
    </div>
}
